concept,task_description
color mapping,"## given concept: color mapping
## puzzle description:
In the input, you will see a grid of colored pixels. Each color in the input grid will be transformed according to a specific color mapping rule: black becomes blue, blue becomes red, red becomes yellow, yellow becomes green, green becomes purple, purple becomes orange, orange becomes pink, pink becomes brown, brown becomes grey, and grey becomes black. The output should reflect this transformation, resulting in a new grid of colors that corresponds to the specified mapping."
reflection,In the input you will see a grid of colored pixels. The output should be a grid that is the reflection of the input grid across its vertical midline.
rotation,"In the input, you will see a grid of colored pixels. The output should be a grid that is the input grid rotated 180 degrees. This means flipping the grid upside down and then reversing the grid left to right, effectively turning it completely around."
symmetry,"In the input, you will see a grid of colored pixels. The output should be a grid that preserves the left-right symmetry of the input grid; that is, each pixel in the left half of the grid should have a corresponding pixel with the same color in the right half, mirrored across the vertical midline."
translation,"## given concept: translation
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that has the same color pattern as the input grid, but shifted 2 pixels to the right and 1 pixel down."
selection,"## given concept: selection
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid containing only the pixels of a specific selected color from the input grid, while all other colors should be turned to white (or left empty). For example, if the selected color is blue, every blue pixel in the input should remain in the output grid, while all other colored pixels are changed to white."
inversion,"In the input, you will see a grid of colored pixels. The output should be a grid where each color in the input is inverted to its complementary color. For instance, if the input pixel is black, it will turn white in the output, and if it is red, it will become cyan. This transformation should apply to all pixels in the grid."
radiation,"## given concept: radiation
## puzzle description:
In the input, you will see a grid of colored pixels representing a central bright source (any color other than black) surrounded by a darker background (black or grey). The output should be a grid that illustrates the concept of radiation by 'spreading out' the bright color from the center to the surrounding pixels, fading to the background color as the distance from the center increases. Each pixel that is one step away from the center becomes closer to the background color, simulating a gradient effect."
upscaling,"## given concept: upscaling
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that is an upscaled version of the input grid, where each pixel in the input grid is expanded into a 2x2 block of the same color in the output grid. For example, if a pixel in the input grid is blue, it will become a blue 2x2 block in the output grid."
downscaling,"In the input, you will see a grid of colored pixels that is 10x10 in size. The output should be a grid that is a downscaled version of the input grid, reducing the size to 5x5 by taking a sample of every 2nd pixel in both dimensions (vertically and horizontally) and retaining the color of those pixels. Each color in the input grid should have a corresponding representation in the downscaled output, creating a simplified version of the original grid."
growth,"In the input, you will see a grid of colored pixels representing a plant with colored leaves and stems. The output should be a grid that depicts the growth of the plant, with each colored leaf replaced by a pixel of the same color but increased in size, effectively doubling the number of pixels representing the plant while maintaining the same layout and color distribution."
shrinkage,"## given concept: shrinkage
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that is a smaller version of the input grid, resulting from shrinking its dimensions by half. If the input grid has dimensions of 8x8, the output will be a 4x4 grid where each pixel in the output is determined by taking the average color of the corresponding 2x2 block in the input grid. This produces a compressed visual representation while preserving the overall color characteristics."
bounding box,"## given concept: bounding box
## puzzle description:
In the input, you will see a grid of colored pixels where certain colors form distinct shapes. The output should be a grid that shows the minimal bounding box for each distinct colored shape in the input grid. The bounding box should be drawn using a unique color (e.g., black), and the area inside the bounding box should be filled with the corresponding shape's color."
insertion,"In the input, you will see a grid of colored pixels. The output should be a grid that contains the same pixels as the input, but with an additional row of colored pixels inserted directly in the middle of the grid. This new row will consist of a repeating pattern of colors. For example, if the input grid is 5 rows tall, the output grid will be 6 rows tall, with the additional row added as the third row, featuring a pattern of colors such as blue, red, yellow, blue, red, yellow."
jigsaw,"## Puzzle Description:
In the input, you will see a grid of colored pixels divided into four equal quadrants. Each quadrant contains a unique pattern of colors, resembling unmatched puzzle pieces. The output should be a grid that rearranges the quadrants in a clockwise direction while preserving their internal arrangement of colors. Thus, the top left quadrant moves to the top right, the top right to the bottom right, the bottom right to the bottom left, and the bottom left to the top left, creating a simple yet effective jigsaw effect."
ray tracing,"In the input, you will see a grid of colored pixels representing a simple scene with an object (e.g., a colored square, circle, or triangle) placed on one side of the grid and a light source indicated by a distinct color (like yellow) on the opposite side. The output should be a grid that demonstrates ray tracing: starting from the light source, draw straight lines (rays) extending towards the object. The output grid will show these rays in a specific color (like grey or blue) until they hit the object, ensuring rays are not obstructed or bend, and demonstrate the straight path of each ray from the light source to the object."
bouncing,"In the input, you will see a grid of colored pixels. The output should be a grid where each colored pixel bounces off the edges of the grid. This means that any pixel that moves beyond the top or bottom edge will come back into the grid from the opposite edge, and any pixel that moves beyond the left or right edge will also re-enter from the opposite side. The transformation should simulate a bouncing effect as if pixels are balls bouncing within a confined space."
filling,"## given concept: filling
## puzzle description:
In the input, you will see a grid of colored pixels with specific colors designated to form a border of a shape. The output should be a grid where the inner area enclosed by the border is filled with a new specified color. Ensure that the border colors don't change, while the area inside gets filled uniformly with the new color."
occlusion,"## given concept: occlusion
## puzzle description:
In the input, you will see a grid of colored pixels where some pixels are completely filled with color and others are transparent (showing the background color).
The output will be a grid that retains the filled pixels from the input but will overlay a gray layer over the transparent pixels, simulating the effect of occlusion where the background is obscured and only the filled colors are visible."
repetition,"## given concept: repetition
## puzzle description:
In the input, you will see a grid of colored pixels containing a pattern of two different colors (for example, blue and yellow) arranged in a simple repetition along the horizontal axis. The output should be a grid that repeats this color pattern vertically, creating a 2D grid where each row is a copy of the original pattern from the input."
grouping,"## given concept: grouping
## puzzle description:
In the input, you will see a grid of colored pixels composed of various sections of colors. The output should be a grid that groups adjacent pixels of the same color together into larger blocks. Each block in the output grid should represent a contiguous area of the same colored pixels from the input, maintaining the same colors, but arranged so that all similar colors are grouped together with no gaps between the similar blocks."
counting,"## given concept: counting
## puzzle description:
In the input, you will see a grid of colored pixels consisting of randomly placed colored squares. The output should be a grid that counts and displays the number of adjacent, same-colored squares for each pixel in the input. Each pixel in the output grid will contain a number indicating how many of its neighboring squares (horizontally, vertically, and diagonally) are the same color as the input pixel."
swapping,"## given concept: swapping
## puzzle description:
In the input, you will see a grid of colored pixels containing only the colors blue and yellow arranged in various patterns. The output should be a grid where every blue pixel in the input is swapped with a yellow pixel, and vice versa, thus effectively achieving the color swap for the entire grid."
object identification,"In the input, you will see a grid of colored pixels where certain patterns represent different objects. The output should consist of a grid that colors each distinct object in the input in a unique color, while replacing the background with a single color (e.g., grey). The pattern for the objects can vary in shape and arrangement, but the transformation law should clearly identify and separate each unique object from the background."
object selection,"## given concept: object selection
## puzzle description:
In the input, you will see a grid of colored pixels where some regions form solid shapes while others consist of scattered single pixels. The output should be a grid that only includes the solid colored shapes from the input, eliminating all scattered pixels. Each solid shape should maintain its original color and size in the output grid."
subgrid selection,"## given concept: subgrid selection
## puzzle description:
In the input, you will see a larger grid of colored pixels. The output should be a grid that is the result of selecting a specific rectangular subgrid from the input. The subgrid will be defined by picking a starting coordinate (row, column) and dimensions (height and width) for the region to extract. For example, if the input grid is 5x5 and the specified subgrid starts at (1, 2) and has a height of 2 and width of 3, the output will be a 2x3 grid containing only the pixels from the defined subgrid area."
accretion,"## given concept: accretion
## puzzle description:
In the input you will see a grid of colored pixels where certain colors represent different shapes or sizes. The output should be a grid that displays an increase in the size of any contiguous colored region by surrounding it with the same color, effectively 'growing' these regions outward by one pixel in every direction."
ablation,"## given concept: ablation
## puzzle description:
In the input, you will see a grid of colored pixels representing a filled shape (like a rectangle or a circle). The output should be a grid that shows the same shape with a portion of it fully removed from the center, creating a hollow area (or 'hole'). For example, if the input grid depicts a filled square, the output might show a square with a smaller square removed from the center."
shearing,"In the input, you will see a grid of colored pixels. The output should be a grid that represents a shearing transformation of the input grid, where each row of pixels in the output is shifted to the right by one additional pixel than the previous row. For example, if the first row remains unchanged, the second row is shifted one pixel to the right, the third row is shifted two pixels to the right, and so on."
skewing,"In the input, you will see a grid of colored pixels. The output should be a grid where the pixels are skewed horizontally to a given angle. For each pixel, move its column to the right by the number of rows from the top of the grid to the pixel, wrapping around to the first column if necessary."
warping,"## given concept: warping
## puzzle description:
In the input, you will see a grid of colored pixels, with a distinct pattern formed by the arrangement of colors. The output should be a grid that has undergone warping, where each pixel from the input has been moved to a new position based on the sine function. Specifically, for each pixel in the grid located at (x, y), the new position of that pixel in the output should be calculated as (x + sin(y/3), y + cos(x/3)). The colors of the pixels remain the same, but the overall shape will expand and contract rhythmically, giving the effect of a warped surface."
morphing,"## given concept: morphing
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that morphs the input grid into a smoother transition to a specified target grid by averaging the colors of each corresponding pixel with the target pixel colors. For instance, if the input grid has one blue pixel at (1,1) and the target grid has a red pixel at (1,1), the output should have a purple pixel at (1,1) as a blend of blue and red."
blurring,"## given concept: blurring
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that represents a blurred version of the input grid, where each pixel's color is replaced by the average color of its neighboring pixels (including diagonals) in a 3x3 grid centered on that pixel. Edges of the grid should take into account only the available neighboring pixels."
sharpening,"## given concept: sharpening
## puzzle description:
In the input, you will see a grid of colored pixels that represents a soft or blurred image, where adjacent colors smoothly transition from one to another. The output should be a grid that highlights the edges and sharpens the features of the input image, resulting in higher contrast at the boundary of colors. The rule applied here is to intensify the colors at edges while reducing the blending of colors that are similar, producing a crisp image effect."
masking,"## given concept: masking
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that retains the colors of the input grid only in a specified rectangular area, while all pixels outside this area are turned to white. The defined masking area will always be provided as part of the puzzle rules, ensuring a clear demonstration of the masking concept."
compositing,"## given concept: compositing
## puzzle description:
In the input, you will see two overlapping grids of colored pixels. The top grid will feature semi-transparent colors, while the bottom grid will have solid colors. The output should be a grid that represents the compositing of the two grids, where the semi-transparent pixels blend with the solid pixels to create a new color in the output grid, following basic alpha compositing principles."
filtering,"## given concept: filtering
## puzzle description:
In the input, you will see a grid of colored pixels that may contain a mix of colors. The output should be a grid that retains only the pixels of a specified color (for example, red) and turns all other colors into white. Every pixel that is red in the input will remain red in the output, while all other colored pixels will be transformed to white."
colorization,"## Given concept: colorization
## Puzzle description:
In the input, you will see a grid of colored pixels where certain pixels are colored differently based on a distinct pattern (for example, a checkerboard pattern). The output should be a grid that maps all pixels to a new standardized color based on the following rule: each unique color in the input grid should be replaced by a specific color (for instance, all black pixels become blue, all red pixels become yellow, etc.). This demonstrates the concept of colorization by changing the appearance of the input grid while maintaining its overall structure."
dithering,"In the input, you will see a grid of colored pixels consisting of various colors. The output should be a grid that applies dithering by replacing areas of solid color with a pattern of alternate black and white pixels, creating the illusion of a gradient effect. For instance, a solid blue square might be transformed into a checkerboard pattern of blue and white pixels, where the intensity of blue is represented by the density of the black and white pattern."
pixelating,"## given concept: pixelating
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a reduced version of the input grid where each 2x2 block of pixels is represented by a single pixel of the same color, effectively 'pixelating' the image."
tiling,"## given concept: tiling
## puzzle description:
In the input, you will see a grid of colored pixels where each pixel is represented by one of the ten colors. The output should be a grid that showcases the pattern of the input grid tiled repeatedly across a larger area. Each color from the input should be copied and arranged in the same spatial arrangement, creating a seamless tiling effect that continues across the width and height of the new grid. The output grid will thus demonstrate the principle of tiling by showing how the original pattern can infinitely extend by repeating it."
tesselation,"## given concept: tesselation
## puzzle description:
In the input you will see a grid of colored pixels featuring a specific geometric shape, such as triangles, squares, or hexagons. The output should be a grid where the same shape is tessellated to completely fill the grid without any gaps or overlaps, while ensuring that the colors are applied in a consistent pattern that showcases the repeating nature of the tessellation."
convolution,"In the input, you will see a grid of colored pixels representing a 3x3 kernel (the filter) overlaid on a larger grid that measures 5x5 pixels. The output should be a 3x3 transformed grid, where each pixel is the result of applying the convolution operation using the kernel over the input grid. For each pixel in the output, compute the weighted sum of the pixel values in the overlapping region defined by the kernel, where each corresponding pixel in the kernel provides a weight to the pixel in the input grid."
circumscription,"In the input, you will see a grid of colored pixels representing various shapes. The output should be a grid that shows a circumscribed shape around the largest shape in the input, with the circumscribing shape colored in a distinct color (e.g., blue). The area outside this circumscribing shape will be colored in white."
inscription,"## given concept: inscription
## puzzle description:
In the input, you will see a grid of colored pixels containing a simple shape, such as a rectangle or triangle, filled with various colors. The output should be a grid where the original shape from the input is retained, but every pixel inside the shape is replaced with a single color (e.g., yellow). The surrounding area outside the shape should remain unchanged."
path finding,"In the input, you will see a grid of colored pixels representing a maze or pathway, with some pixels colored in black (representing walls) and others in any of the other nine colors (representing possible paths). The output should be a grid that highlights the shortest path from a designated start point (marked with a specific color, for example, green) to the end point (marked with another color, such as red) by coloring the path pixels in yellow. The transformation law captures the concept of path finding by showcasing the determination of a clear route within constraints."
gravity,"## given concept: gravity
## puzzle description:
In the input, you will see a grid of colored pixels representing objects placed at different heights. The output should be a grid where each colored pixel representing an object moves down to the lowest available position in each column, simulating the effect of gravity pulling the objects downwards. Empty spaces in the grid below will be filled first, and if there are no empty cells in a column, the pixels will remain in their original positions."
shape mapping,"## given concept: shape mapping
## puzzle description:
In the input, you will see a grid of colored pixels featuring distinct shapes made from combinations of colors. The output should be a grid where each shape from the input is preserved but shifted to a new location within the grid based on a specific mapping rule. For example, if a yellow triangle is found at position (2,3) in the input, it should be moved to position (5,7) in the output. The transformation law captures the concept of shape mapping by illustrating how shapes can be relocated while retaining their identity."
collision,"In the input you will see a grid of colored pixels that represents two shapes or colors touching or overlapping in certain areas. The output should be a grid that shows the resulting color of the overlapping pixels as a mixture of the two colors, while keeping the non-overlapping pixels as they are. For instance, if a red pixel overlaps with a blue pixel, the resulting pixel should be purple. Non-overlapping pixels remain unchanged."
stacking,"## Given concept: stacking
## Puzzle description:
In the input, you will see a grid of colored pixels forming a representation of stacked blocks, where each color represents a different block. The output should be a grid where the blocks are visually 'stacked' to simulate a vertical arrangement. This means the colors should be aligned at the bottom of the grid, and any empty space above should be cleared out, leaving the blocks resting on each other as if gravity applied, mimicking a tower of blocks."
nesting,"In the input, you will see a grid of colored pixels where smaller sets of colored squares are contained entirely within larger squares of the same color. The output will be a grid that maintains the nesting structure but will swap the inner colors with a distinct color not originally in the grid, effectively highlighting the nested relationships."
squeezing,"## given concept: squeezing
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that is the result of squeezing the input grid horizontally by removing every second column of pixels. If the input grid has an odd number of columns, the last column should be included in the output."
centering,"In the input, you will see a grid of colored pixels. The output should be a grid where each color pixel from the input grid is shifted to the center of the output grid. For example, if the input grid is 5x5, the output grid will also be 5x5, with the color from the input's pixel in (2,2) becoming the pixel in the output located at (2,2), and any pixels in the input that are closer to the edge getting adjusted to fit around the center of the output grid."
count mapping,"In the input, you will see a grid of colored pixels with various colors. The output should be a grid where each colored pixel is replaced by the count of that color in the entire input grid. For example, if the input grid has 5 blue, 3 red, 2 yellow, and 4 green pixels, the output grid will replace each blue pixel with '5', each red pixel with '3', each yellow pixel with '2', and each green pixel with '4'. Any color not present in the input grid should not appear in the output grid."
stretching,"## given concept: stretching
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid that is the input grid stretched vertically by a factor of 2. This means that each row of pixels in the input grid will be duplicated, effectively doubling the height of the grid while keeping the width the same."
compression,"## given concept: compression
## puzzle description:
In the input, you will see a grid of colored pixels that may contain areas of varying colors. The output should be a grid that represents a compressed version of the input grid, where each contiguous block of the same color is represented by a single pixel of that color. For example, if there is a block of 3 horizontal blue pixels, it will be represented as a single blue pixel in the output. Any rows of pixels that are completely empty should be removed in the output grid."
expansion,"## given concept: expansion
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid where every colored pixel in the input grid becomes a 2x2 block of the same color in the output grid. Any empty space in the input grid remains empty in the output grid. This transformation effectively expands each pixel into a larger square, illustrating the concept of expansion."
falling,"## given concept: falling
## puzzle description:
In the input, you will see a grid of colored pixels that represents different colored blocks suspended in the air. The output should be a grid where every block falls straight down to the lowest available position in each respective column, as if affected by gravity, creating a new configuration without changing the order of the blocks within their columns."
attraction,"## given concept: attraction
## puzzle description:
In the input, you will see a grid of colored pixels arranged in a pattern with clusters of colors. The output should be a grid where each pixel moves towards the nearest neighboring pixel of the same color, creating more defined clusters. For instance, if a red pixel is surrounded by other red pixels at any distance, it will move closer to the center of the nearest red cluster in the output, creating a condensed effect."
repulsion,"## given concept: repulsion
## puzzle description:
In the input, you will see a grid of colored pixels containing several colored squares. The output should be a grid where each colored square from the input moves away from other squares of the same color in a manner that creates distance between them. Each square of the same color should move in a direction that is perpendicular to the line connecting it to the nearest neighboring square of the same color, effectively creating a 'repulsive' effect on the same colors. If a square is on the edge of the grid and has limited space to move, it should remain at the edge but still maintain the maximum distance from other squares of the same color."
fractality,"In the input, you will see a grid of colored pixels that forms a simple pattern, such as a colored square or triangle. The output should be a grid that reproduces the same pattern in a smaller size at each corner of the original grid, creating a larger fractal-like structure. Each smaller copy retains the original colors in the same arrangement as the top-level shape."
rotational symmetry,"In the input, you will see a grid of colored pixels. The output should be a grid that is the input grid rotated 180 degrees (a half-turn) around its center point. This demonstrates the concept of rotational symmetry, where the output matches the input when viewed from two opposite directions."
translational symmetry,"## given concept: translational symmetry
## puzzle description:
In the input, you will see a grid of colored pixels containing a pattern that is composed of shapes repeated in a specific arrangement. The output should be a grid that reproduces the input pattern shifted one unit to the right, maintaining the same vertical alignment. This demonstrates translational symmetry by showcasing how the same design can appear in multiple locations in the grid without any changes to its internal structure."
arithmetic,"## given concept: arithmetic
## puzzle description:
In the input, you will see a grid of colored pixels where each color corresponds to a number from 1 to 10: black = 1, blue = 2, red = 3, yellow = 4, purple = 5, orange = 6, green = 7, brown = 8, grey = 9, pink = 10. The output should be a grid where each pixel's color is determined by adding the values of its corresponding pixel's color and the color of the pixel to its right (wrapping around to the first column after the last). If the sum exceeds 10, it should cycle back around (e.g., 11 becomes 1, 12 becomes 2, etc.)."
addition,"In the input, you will see two grids of colored pixels, each of the same size. The output should be a grid where each pixel color in the output grid is a blend of the corresponding pixels in the input grids. For this puzzle, each color can be represented by a number: black (0), blue (1), red (2), yellow (3), purple (4), orange (5), green (6), brown (7), grey (8), and pink (9). The blending rule is that the color in the output grid corresponds to the numerical sum of the pixel colors from the two input grids, using modulo 10 to ensure that the resulting value corresponds to one of the valid colors. Thus, if the first input grid has a blue pixel (1) and the second input grid has a red pixel (2), the output pixel in that position would be purple (3)."
subtraction,"In the input, you will see two grids of colored pixels, each containing the same height and width. The output should be a grid that represents the subtraction of the second input grid from the first. The rules for subtraction are such that if a pixel in the first grid is the same color as the corresponding pixel in the second grid, that pixel in the output grid will be blank (or a placeholder color such as white). If a pixel in the second grid is a different color from the corresponding pixel in the first grid, then the pixel in the output grid will retain the color of the pixel from the first grid."
fracturing,"## given concept: fracturing
## puzzle description:
In the input, you will see a grid of colored pixels that includes a single solid colored shape (any color) covering a rectangular area. The output should be a grid where the original shape has been 'fractured' into smaller, non-overlapping rectangular sections. Each section should maintain the original color but can be rearranged in different positions within the output grid as long as they do not overlap. The goal is to emphasize the concept of breaking something whole into smaller pieces while demonstrating how they can be reorganized."
cutting,"## given concept: cutting
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a new grid created by cutting the input grid horizontally at the middle row. The top half of the grid will be retained, and the bottom half will be replaced with white pixels, indicating that part has been 'cut' out. If the grid has an odd number of rows, the middle row should also be kept in the output. This transformation visually demonstrates the concept of cutting based on the specified line."
splitting,"## given concept: splitting
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be two grids, each representing a vertical split of the input grid; the left grid will contain all colors from the left half of the input grid, and the right grid will contain all colors from the right half of the input grid. If the input grid has an odd width, the left grid will contain the extra column on the left side."
fusion,"## given concept: fusion
## puzzle description:
In the input, you will see a grid of colored pixels. The output should be a grid where adjacent pixels of the same color in the input grid have been fused into a single pixel of the same color. For example, if two red pixels are directly next to each other either vertically or horizontally, they should be represented as one red pixel in the output, and this should apply recursively to groups of same-colored pixels."
attachment,"In the input, you will see a grid of colored pixels, with certain colors concentrated in the center and the edges left blank (or a single color). The output should be a grid where the center colors are duplicated and attached to the nearest adjacent edge pixels of the same color, effectively ""growing"" each color outward until they meet at the edges, creating a solid border of that color."
detachment,"## given concept: detachment
## puzzle description:
In the input, you will see a grid of colored pixels. The output will be a grid that retains only the outermost layer of pixels from the input grid, effectively detaching and removing all pixels that are not on the perimeter. This will illustrate the concept of detachment by showing how the internal structure is removed, leaving just the boundary."
